include_directories(include)
include_directories(${PROJECT_SOURCE_DIR}/${FEATURE_LIB}/include)
include_directories(${PROJECT_SOURCE_DIR}/${LIB_FOLDER}/essentia/include)

if(WIN32)
   include_directories(${PROJECT_SOURCE_DIR}/${LIB_FOLDER}/armadillo/include)
   link_directories(${PROJECT_SOURCE_DIR}/${LIB_FOLDER}/armadillo/Debug)
   link_directories(${PROJECT_SOURCE_DIR}/${LIB_FOLDER}/armadillo/Release)    
elseif(UNIX)  
   link_directories(${PROJECT_SOURCE_DIR}/${LIB_FOLDER}/essentia) 
endif()

file(GLOB SOURCE_FILES src/*.cpp)
file(GLOB HEADER_FILES include/*.h)

add_executable(${RECOGNIZER_APP} ${SOURCE_FILES} ${HEADER_FILES})

if(WIN32) 
   target_link_libraries(${RECOGNIZER_APP} ${FEATURE_LIB} armadillo libblas liblapack)
elseif(UNIX)
   list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/../cmake")
   find_package (libblas REQUIRED)
   find_package (liblapack REQUIRED)
   find_package (Armadillo REQUIRED)
   include_directories(${ARMADILLO_INCLUDE_DIRS})
   include_directories(${BLAS_INCLUDE_DIR})
   include_directories(${LAPACK_INCLUDE_DIR})
   target_link_libraries(${RECOGNIZER_APP} ${FEATURE_LIB} ${ARMADILLO_LIBRARIES} ${BLAS_LIBRARIES} ${LAPACK_LIBRARIES} essentia fftw3 yaml avcodec avformat avutil avresample samplerate tag fftw3f)
endif()